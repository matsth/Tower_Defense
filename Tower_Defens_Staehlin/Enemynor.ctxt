#BlueJ class context
comment0.target=Enemynor
comment0.text=\r\n\ Normaler\ Enemy\ der\ dem\ Pfad\ folgt.\r\n\ Hier\ ist\ die\ Bewegung\ geregelt.\r\n\ \r\n\ @author\ Matteo\r\n
comment1.params=
comment1.target=Enemynor()
comment1.text=\r\n\ Setzt\ die\ statistik\ dieses\ Gegners.\r\n
comment2.params=
comment2.target=void\ act()
comment2.text=\r\n\ Testet\ ob\ der\ Linke\ Punkt\ \u00FCber\ Schwarz\ ist\ und\ danach\ ob\ der\ Rechte\ Punkt\ \u00FCber\ Schwarz\ ist.\r\n\ Falls\ Ja\ dreht\ sich\ dieser\ Enemy\ entsprechend.\r\n\ \r\n\ Danach\ bewegt\ er\ sich\ weiter\ und\ testet\ ob\ er\ das\ Ende\ ber\u00FChrt\ mit\ der\ touchEnd()\ Methode.\r\n
comment3.params=
comment3.target=void\ needTurn()
comment3.text=\r\n\ Dreht\ sich\ fals\ n\u00F6tig.\r\n
comment4.params=angle
comment4.target=greenfoot.Color\ pointCollor(int)
comment4.text=\r\n\ Zuerst\ wird\ der\ Winkelbogen\ als\ Radians\ ausgerechnet.\r\n\ X\:\ Der\ Radians\ wird\ genommen\ und\ mit\ Cosinusfunktion\ mit\ dem\ Offset\ multipliziert.\ Dadurch\ erh\u00E4lt\ man\ den\ X\ Wert\ des\ gew\u00FCnschten\ punktes.\r\n\ Y\:\ Gleich\ wie\ X\ aber\ die\ Sinusfunktion\ wird\ verwendet.\r\n\ \r\n\ Mehr\ Infos\ unter\:\r\n\ https\://math.stackexchange.com/questions/2390443/extracting-x-and-y-values-from-radians\r\n\ \r\n\ Zum\ Schluss\ wird\ ein\ neuer\ Punkt\ mit\ den\ ausgerechneten\ Kordinaten\ erstellt\ und\ auch\ ausgegeben.\r\n
numComments=5
